{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","_ref","user","React","createElement","className","href","TodoInfo","todo","cn","data-id","TodoList","todos","map","key","App","setTodos","useState","users","find","undefined","addUserToTodo","todosFromServer","usersFromServer","userValue","setUserValue","setTitle","errors","setErrors","action","method","onSubmit","event","preventDefault","trim","newTodo","length","Math","max","Number","htmlFor","type","data-cy","placeholder","value","onChange","target","prevErrors","disabled","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ed94cf7c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/interfaces';\nimport React from 'react';\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo = ({ user }: Props) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/interfaces';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo = ({ todo }: Props) => (\n  <article\n    className={cn('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n    data-id={todo.id}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import { Todo } from '../../types/interfaces';\nimport { TodoInfo } from '../TodoInfo';\nimport React from 'react';\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList = ({ todos }: Props) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport React, { useState } from 'react';\nimport { Todo, User } from './types/interfaces';\nimport { TodoList } from './components/TodoList';\n\nexport function addUserToTodo(todos: Todo[], users: User[]): Todo[] {\n  return todos.map(todo => {\n    return {\n      ...todo,\n      user: users.find(user => user.id === todo.userId) || undefined,\n    };\n  });\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(\n    addUserToTodo(todosFromServer, usersFromServer),\n  );\n\n  const [userValue, setUserValue] = useState<string>('0');\n\n  const [title, setTitle] = useState<string>('');\n\n  const [errors, setErrors] = useState<{ title: boolean; user: boolean }>({\n    title: false,\n    user: false,\n  });\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setTitle(event.target.value);\n    if (errors.title) {\n      setErrors(prevErrors => ({ ...prevErrors, title: false }));\n    }\n  };\n\n  const handleUserValue = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ): void => {\n    setUserValue(event.target.value);\n\n    if (errors.user) {\n      setErrors(prevErrors => ({ ...prevErrors, user: false }));\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n\n    if (!title.trim() || userValue === '0') {\n      setErrors({ title: !title.trim(), user: userValue === '0' });\n\n      return;\n    }\n\n    const newId =\n      todos.length > 0 ? Math.max(...todos.map(todo => todo.id)) + 1 : 1;\n\n    const newTodo: Todo = {\n      id: newId,\n      title: title.trim(),\n      userId: Number(userValue),\n      completed: false,\n      user: usersFromServer.find(user => user.id === Number(userValue)),\n    };\n\n    setTodos([...todos, newTodo]);\n\n    setTitle('');\n    setUserValue('0');\n    setErrors({ title: false, user: false });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            <span>Title: </span>\n            <input\n              id=\"title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitle}\n            />\n          </label>\n\n          {errors.title && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            <span>User: </span>\n            <select\n              id=\"user\"\n              data-cy=\"userSelect\"\n              value={userValue}\n              onChange={handleUserValue}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {errors.user && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { App } from './App';\nimport React from 'react';\n\ncreateRoot(document.getElementById('root') as HTMLElement).render(<App />);\n"],"sourceRoot":""}